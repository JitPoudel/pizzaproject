{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport function useToppings(defaultTopping) {\n  _s();\n\n  const [toppings, setToppings] = useState(defaultTopping || getDefaultToppings());\n\n  function checkTopping(index) {\n    const newToppings = [...toppings];\n    newToppings[index].checked = !newToppings[index].checked;\n    setToppings(newToppings);\n  }\n\n  return {\n    checkTopping,\n    toppings\n  };\n}\n\n_s(useToppings, \"gV799GOXVLWjZQRMcomQw0b/LZQ=\");\n\nconst toppingsList = [\"Pepperoni\", \"Mushrooms\", \"Onions\", \"Sausage\", \"Bacon\", \"Green peppers\", \"Grilled chicken\", \"Extra cheese\", \"Black olives\", \"Ham\", \"Pineapple\", \"Spinach\", \"Anchovies\", \"Hard boiled eggs\"];\n\nfunction getDefaultToppings() {\n  return toppingsList.map(topping => ({\n    name: topping,\n    checked: false\n  }));\n}","map":{"version":3,"sources":["C:/Users/Jit's_Pc/Desktop/cis434s22g9/my-app/src/Hooks/useToppings.js"],"names":["useState","useToppings","defaultTopping","toppings","setToppings","getDefaultToppings","checkTopping","index","newToppings","checked","toppingsList","map","topping","name"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,SAASC,WAAT,CAAqBC,cAArB,EAAqC;AAAA;;AAC1C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CACtCE,cAAc,IAAIG,kBAAkB,EADE,CAAxC;;AAGA,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,UAAMC,WAAW,GAAG,CAAC,GAAGL,QAAJ,CAApB;AACAK,IAAAA,WAAW,CAACD,KAAD,CAAX,CAAmBE,OAAnB,GAA6B,CAACD,WAAW,CAACD,KAAD,CAAX,CAAmBE,OAAjD;AACAL,IAAAA,WAAW,CAACI,WAAD,CAAX;AACD;;AACD,SAAO;AACLF,IAAAA,YADK;AAELH,IAAAA;AAFK,GAAP;AAID;;GAbeF,W;;AAehB,MAAMS,YAAY,GAAG,CACnB,WADmB,EAEnB,WAFmB,EAGnB,QAHmB,EAInB,SAJmB,EAKnB,OALmB,EAMnB,eANmB,EAOnB,iBAPmB,EAQnB,cARmB,EASnB,cATmB,EAUnB,KAVmB,EAWnB,WAXmB,EAYnB,SAZmB,EAanB,WAbmB,EAcnB,kBAdmB,CAArB;;AAiBA,SAASL,kBAAT,GAA8B;AAC5B,SAAOK,YAAY,CAACC,GAAb,CAAkBC,OAAD,KAAc;AACpCC,IAAAA,IAAI,EAAED,OAD8B;AAEpCH,IAAAA,OAAO,EAAE;AAF2B,GAAd,CAAjB,CAAP;AAID","sourcesContent":["import { useState } from \"react\";\n\nexport function useToppings(defaultTopping) {\n  const [toppings, setToppings] = useState(\n    defaultTopping || getDefaultToppings()\n  );\n  function checkTopping(index) {\n    const newToppings = [...toppings];\n    newToppings[index].checked = !newToppings[index].checked;\n    setToppings(newToppings);\n  }\n  return {\n    checkTopping,\n    toppings,\n  };\n}\n\nconst toppingsList = [\n  \"Pepperoni\",\n  \"Mushrooms\",\n  \"Onions\",\n  \"Sausage\",\n  \"Bacon\",\n  \"Green peppers\",\n  \"Grilled chicken\",\n  \"Extra cheese\",\n  \"Black olives\",\n  \"Ham\",\n  \"Pineapple\",\n  \"Spinach\",\n  \"Anchovies\",\n  \"Hard boiled eggs\",\n];\n\nfunction getDefaultToppings() {\n  return toppingsList.map((topping) => ({\n    name: topping,\n    checked: false,\n  }));\n}\n"]},"metadata":{},"sourceType":"module"}
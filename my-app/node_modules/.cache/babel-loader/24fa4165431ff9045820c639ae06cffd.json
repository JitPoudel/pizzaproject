{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { signInWithPopup, signInWithEmailAndPassword, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { useEffect, useState } from \"react\";\nimport { auth, provider } from \"../firebase\";\nexport function useFirebaseLogin() {\n  _s();\n\n  const [authenticated, setAuthenticated] = useState();\n\n  function logout() {\n    auth.signOut().then(function () {\n      console.log(\"signout\"); // Log-out succesful\n    }).catch(function (error) {// Error logging out\n    });\n  }\n\n  useEffect(() => {\n    auth.onAuthStateChanged(function (user) {\n      if (user) {\n        setAuthenticated(user);\n      } else {\n        setAuthenticated();\n      }\n    }, function (error) {\n      console.log(error);\n    });\n  }, []);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const loginWithGoogle = async () => {\n    try {\n      setError(\"\");\n      await signInWithPopup(auth, provider);\n    } catch (err) {\n      console.log(err.message);\n      setError(\"Problem when signing in with Google.\");\n    }\n  };\n\n  const loginEmailPassword = async () => {\n    const loginEmail = email;\n    const loginPassword = password;\n\n    try {\n      setError(\"\");\n      await signInWithEmailAndPassword(auth, loginEmail, loginPassword);\n    } catch {\n      setError(\"Failed to sign in. Make sure your email and password are correct.\");\n    }\n  };\n\n  const createAccount = async () => {\n    const loginEmail = email;\n    const loginPassword = password;\n\n    try {\n      setError(\"\");\n      await createUserWithEmailAndPassword(auth, loginEmail, loginPassword);\n    } catch {\n      setError(\"Failed to create account. Make sure your password is long enough.\");\n    }\n  };\n\n  return {\n    loginWithGoogle,\n    email,\n    password,\n    setEmail,\n    setPassword,\n    loginEmailPassword,\n    createAccount,\n    logout,\n    loggedIn: authenticated,\n    error,\n    setError\n  };\n}\n\n_s(useFirebaseLogin, \"IQ4A43iSkW0B+C5RyTh5tqFU3oQ=\");","map":{"version":3,"sources":["C:/Users/Jit's_Pc/Desktop/cis434s22g9/my-app/src/Hooks/useFirebaseLogin.js"],"names":["signInWithPopup","signInWithEmailAndPassword","createUserWithEmailAndPassword","useEffect","useState","auth","provider","useFirebaseLogin","authenticated","setAuthenticated","logout","signOut","then","console","log","catch","error","onAuthStateChanged","user","email","setEmail","password","setPassword","setError","loginWithGoogle","err","message","loginEmailPassword","loginEmail","loginPassword","createAccount","loggedIn"],"mappings":";;AAAA,SACEA,eADF,EAEEC,0BAFF,EAGEC,8BAHF,QAIO,eAJP;AAKA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,IAAT,EAAeC,QAAf,QAA+B,aAA/B;AAEA,OAAO,SAASC,gBAAT,GAA4B;AAAA;;AACjC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,EAAlD;;AAEA,WAASM,MAAT,GAAkB;AAChBL,IAAAA,IAAI,CACDM,OADH,GAEGC,IAFH,CAEQ,YAAY;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EADgB,CACQ;AACzB,KAJH,EAKGC,KALH,CAKS,UAAUC,KAAV,EAAiB,CACtB;AACD,KAPH;AAQD;;AAEDb,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,IAAI,CAACY,kBAAL,CACE,UAAUC,IAAV,EAAgB;AACd,UAAIA,IAAJ,EAAU;AACRT,QAAAA,gBAAgB,CAACS,IAAD,CAAhB;AACD,OAFD,MAEO;AACLT,QAAAA,gBAAgB;AACjB;AACF,KAPH,EAQE,UAAUO,KAAV,EAAiB;AACfH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,KAVH;AAYD,GAbQ,EAaN,EAbM,CAAT;AAeA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACY,KAAD,EAAQO,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMoB,eAAe,GAAG,YAAY;AAClC,QAAI;AACFD,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACA,YAAMvB,eAAe,CAACK,IAAD,EAAOC,QAAP,CAArB;AACD,KAHD,CAGE,OAAOmB,GAAP,EAAY;AACZZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,GAAG,CAACC,OAAhB;AACAH,MAAAA,QAAQ,CAAC,sCAAD,CAAR;AACD;AACF,GARD;;AAUA,QAAMI,kBAAkB,GAAG,YAAY;AACrC,UAAMC,UAAU,GAAGT,KAAnB;AACA,UAAMU,aAAa,GAAGR,QAAtB;;AACA,QAAI;AACFE,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACA,YAAMtB,0BAA0B,CAACI,IAAD,EAAOuB,UAAP,EAAmBC,aAAnB,CAAhC;AACD,KAHD,CAGE,MAAM;AACNN,MAAAA,QAAQ,CACN,mEADM,CAAR;AAGD;AACF,GAXD;;AAaA,QAAMO,aAAa,GAAG,YAAY;AAChC,UAAMF,UAAU,GAAGT,KAAnB;AACA,UAAMU,aAAa,GAAGR,QAAtB;;AACA,QAAI;AACFE,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACA,YAAMrB,8BAA8B,CAACG,IAAD,EAAOuB,UAAP,EAAmBC,aAAnB,CAApC;AACD,KAHD,CAGE,MAAM;AACNN,MAAAA,QAAQ,CACN,mEADM,CAAR;AAGD;AACF,GAXD;;AAaA,SAAO;AACLC,IAAAA,eADK;AAELL,IAAAA,KAFK;AAGLE,IAAAA,QAHK;AAILD,IAAAA,QAJK;AAKLE,IAAAA,WALK;AAMLK,IAAAA,kBANK;AAOLG,IAAAA,aAPK;AAQLpB,IAAAA,MARK;AASLqB,IAAAA,QAAQ,EAAEvB,aATL;AAULQ,IAAAA,KAVK;AAWLO,IAAAA;AAXK,GAAP;AAaD;;GApFehB,gB","sourcesContent":["import {\n  signInWithPopup,\n  signInWithEmailAndPassword,\n  createUserWithEmailAndPassword,\n} from \"firebase/auth\";\nimport { useEffect, useState } from \"react\";\n\nimport { auth, provider } from \"../firebase\";\n\nexport function useFirebaseLogin() {\n  const [authenticated, setAuthenticated] = useState();\n\n  function logout() {\n    auth\n      .signOut()\n      .then(function () {\n        console.log(\"signout\"); // Log-out succesful\n      })\n      .catch(function (error) {\n        // Error logging out\n      });\n  }\n\n  useEffect(() => {\n    auth.onAuthStateChanged(\n      function (user) {\n        if (user) {\n          setAuthenticated(user);\n        } else {\n          setAuthenticated();\n        }\n      },\n      function (error) {\n        console.log(error);\n      }\n    );\n  }, []);\n\n  const [email, setEmail] = useState(\"\");\n\n  const [password, setPassword] = useState(\"\");\n\n  const [error, setError] = useState(\"\");\n\n  const loginWithGoogle = async () => {\n    try {\n      setError(\"\");\n      await signInWithPopup(auth, provider);\n    } catch (err) {\n      console.log(err.message);\n      setError(\"Problem when signing in with Google.\");\n    }\n  };\n\n  const loginEmailPassword = async () => {\n    const loginEmail = email;\n    const loginPassword = password;\n    try {\n      setError(\"\");\n      await signInWithEmailAndPassword(auth, loginEmail, loginPassword);\n    } catch {\n      setError(\n        \"Failed to sign in. Make sure your email and password are correct.\"\n      );\n    }\n  };\n\n  const createAccount = async () => {\n    const loginEmail = email;\n    const loginPassword = password;\n    try {\n      setError(\"\");\n      await createUserWithEmailAndPassword(auth, loginEmail, loginPassword);\n    } catch {\n      setError(\n        \"Failed to create account. Make sure your password is long enough.\"\n      );\n    }\n  };\n\n  return {\n    loginWithGoogle,\n    email,\n    password,\n    setEmail,\n    setPassword,\n    loginEmailPassword,\n    createAccount,\n    logout,\n    loggedIn: authenticated,\n    error,\n    setError,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}